// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/docker-existing-dockerfile
{
	"name": "Meltano MDS",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	"build": {
        "args": {
            "VARIANT": "3.10",
        }
    },

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile.dev-container",
    "settings": {
        "python.pythonPath": "/usr/local/bin/python",
        "python.languageServer": "Pylance"
        // any other settings go here
        // I also haven't included any settings specific to eslint or frontend work (because I don't know what we'd want/need to set
    },
    "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "redhat.vscode-yaml"
    ],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "pip3 install pipx && pipx install meltano"

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
